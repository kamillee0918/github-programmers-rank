name: github-programmers-rank

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '0 * * * *'  # 매시 정각마다 실행 (1시간 간격)

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # Node.js 버전 지정

    steps:
    - uses: actions/checkout@v3  # 저장소 코드 체크아웃
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3  # Node.js 설정
      env: 
        PROGRAMMERS_TOKEN_ID: ${{ secrets.PROGRAMMERS_TOKEN_ID }}
        PROGRAMMERS_TOKEN_PW: ${{ secrets.PROGRAMMERS_TOKEN_PW }}
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: echo ${{ secrets.PROGRAMMERS_TOKEN_ID }}  # 토큰 ID 확인 (디버깅 용도)
    - run: npm install  # 의존성 설치
    - run: npm run build  # 프로젝트 빌드
    - run: |
        touch .env  # .env 파일 생성
        echo PROGRAMMERS_TOKEN_ID=${{ secrets.PROGRAMMERS_TOKEN_ID }} >> .env  # 토큰 ID 저장
        echo PROGRAMMERS_TOKEN_PW=${{ secrets.PROGRAMMERS_TOKEN_PW }} >> .env  # 토큰 비밀번호 저장
        npm run start  # 프로젝트 실행

  cron:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # Node.js 버전 지정

    steps:
    - uses: actions/checkout@v3  # 저장소 코드 체크아웃
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3  # Node.js 설정
      env: 
        PROGRAMMERS_TOKEN_ID: ${{ secrets.PROGRAMMERS_TOKEN_ID }}
        PROGRAMMERS_TOKEN_PW: ${{ secrets.PROGRAMMERS_TOKEN_PW }}
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: echo ${{ secrets.PROGRAMMERS_TOKEN_ID }}  # 토큰 ID 확인 (디버깅 용도)
    - run: npm install  # 의존성 설치
    - run: npm run build  # 프로젝트 빌드
    - run: |
        touch .env  # .env 파일 생성
        echo PROGRAMMERS_TOKEN_ID=${{ secrets.PROGRAMMERS_TOKEN_ID }} >> .env  # 토큰 ID 저장
        echo PROGRAMMERS_TOKEN_PW=${{ secrets.PROGRAMMERS_TOKEN_PW }} >> .env  # 토큰 비밀번호 저장
        npm run start  # 프로젝트 실행
